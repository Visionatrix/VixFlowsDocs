PROMPTS:
  SDXL: [
    "abstract style, brown sands, blue swirls of water and galaxies, best quality, masterpiece",
    "Portrait, photorealistic, vibrant 8k, natural setting, dramatic lighting, expressive features, cinematic depth of field, vivid blue eyes, fantasy humanoid character",
    "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures",
    "sci-fi theme, advanced technology, electromagnetic fields, complex circuits, intricate mechanisms, glowing energy, vibrant colors, masterpiece"
  ]
  AURA_FLOW: [
    "abstract style, brown sands, blue swirls of water and galaxies, best quality, masterpiece",
    "Portrait, photorealistic, vibrant 8k, natural setting, dramatic lighting, expressive features, cinematic depth of field, vivid blue eyes, fantasy humanoid character",
    "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures",
    "sci-fi theme, advanced technology, electromagnetic fields, complex circuits, intricate mechanisms, glowing energy, vibrant colors, masterpiece"
  ]
  CASCADE: [
    "abstract style, brown sands, blue swirls of water and galaxies, best quality, masterpiece",
    "Portrait, photorealistic, vibrant 8k, natural setting, dramatic lighting, expressive features, cinematic depth of field, vivid blue eyes, fantasy humanoid character",
    "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures",
    "sci-fi theme, advanced technology, electromagnetic fields, complex circuits, intricate mechanisms, glowing energy, vibrant colors, masterpiece"
  ]
  DIT_8_BIT: [
    "abstract style, brown sands, blue swirls of water and galaxies, best quality, masterpiece",
    "Portrait, photorealistic, vibrant 8k, natural setting, dramatic lighting, expressive features, cinematic depth of field, vivid blue eyes, fantasy humanoid character",
    "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures",
    "sci-fi theme, advanced technology, electromagnetic fields, complex circuits, intricate mechanisms, glowing energy, vibrant colors, masterpiece"
  ]
  DIT: [
    "abstract style, brown sands, blue swirls of water and galaxies, best quality, masterpiece",
    "Portrait, photorealistic, vibrant 8k, natural setting, dramatic lighting, expressive features, cinematic depth of field, vivid blue eyes, fantasy humanoid character",
    "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures",
    "sci-fi theme, advanced technology, electromagnetic fields, complex circuits, intricate mechanisms, glowing energy, vibrant colors, masterpiece"
  ]
  OLLAMA_1024_TOKENS:
    - |
      Generate a single, large JSON array containing exactly 300 objects. Do not add any explanatory text, markdown formatting, or preamble. The output must be only the raw JSON, starting with [ and ending with ]. Each object must represent a fictional file and strictly adhere to the following schema: {"file_id": "A unique, sequential integer. The first object must have a file_id of 1, the second must be 2, and so on, incrementing by exactly one for each object up to 30.", "filename": "A fictional filename string ending with an extension like '.csv', '.log', '.zip', or '.json'.", "filesize_kb": "An integer between 100 and 50000.", "creation_date": "A valid ISO 8601 timestamp string from the year 2024.", "tags": ["An array of exactly 4 relevant fictional string tags."]}
  OLLAMA_2048_TOKENS:
    - |
      Generate a single, large JSON array containing exactly 500 objects. Do not add any explanatory text, markdown formatting, or preamble. The output must be only the raw JSON, starting with [ and ending with ]. Each object must represent a fictional file and strictly adhere to the following schema: {"file_id": "A unique, sequential integer. The first object must have a file_id of 1, the second must be 2, and so on, incrementing by exactly one for each object up to 60.", "filename": "A fictional filename string ending with an extension like '.csv', '.log', '.zip', or '.json'.", "filesize_kb": "An integer between 100 and 50000.", "creation_date": "A valid ISO 8601 timestamp string from the year 2024.", "tags": ["An array of exactly 4 relevant fictional string tags."]}

SDXL:
  - flow_name: "sdxl_lighting"
    test_cases:
      - name: "lighting"
        input_params:
          prompt: []
          steps_number: "8 steps"
  - flow_name: "juggernaut_lite"
    test_cases:
      - name: "lighting"
        input_params:
          prompt: []
  - flow_name: "playground_2_5_aesthetic"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          fast_run: false
          steps_count: 30
      - name: "fast_run"
        input_params:
          prompt: []
          fast_run: true
          steps_count: 30

AURA_FLOW:
  - flow_name: "auraflow"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          steps_count: 30

CASCADE:
  - flow_name: "stable_cascade"
    test_cases:
      - name: "1 pass"
        input_params:
          prompt: []
          pass_count: "One pass"
      - name: "2 passes"
        input_params:
          prompt: []
          pass_count: "Two pass"
      - name: "3 passes"
        input_params:
          prompt: []
          pass_count: "Three pass"

DIT_8_BIT:
  - flow_name: "flux1_dev"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
          diffusion_precision: "fp8_e4m3fn"
  - flow_name: "flux1_schnell"
    test_cases:
      - name: "lighting"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          diffusion_precision: "fp8_e4m3fn"
  - flow_name: "sd3_5_large_8bit"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
  - flow_name: "sketch_pencil"
    test_cases:
      - name: "lighting"
        input_params:
          aspect_ratio: "1:1 (1024x1024)"
          prompt: []
          diffusion_precision: "fp8_e4m3fn"

DIT:
  - flow_name: "hunyuan_dit"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
  - flow_name: "flux1_dev"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
          diffusion_precision: "default"
  - flow_name: "flux1_schnell"
    test_cases:
      - name: "lighting"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          diffusion_precision: "default"
  - flow_name: "sd3_5_medium"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
  - flow_name: "sd3_5_large"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
  - flow_name: "pixart_e"
    test_cases:
      - name: "default"
        input_params:
          prompt: []
          aspect_ratio: "1:1 (1024x1024)"
          steps_count: 30
          diffusion_precision: "default"

PORTRAITS:
  - flow_name: "vintage_portrait"
    test_cases:
      - name: "default"
        input_params:
          prompt: ["portrait of happy boy", "portrait of crying girl", "portrait of very angry man", "portrait of happy woman"]
        input_files:
          person_face: ["boy.png", "girl.png", "man.png", "woman.png"]
  - flow_name: "ghibli_portrait"
    test_cases:
      - name: "default"
        input_params:
          prompt: ["portrait of happy boy", "portrait of crying girl", "portrait of very angry man", "portrait of happy woman"]
        input_files:
          person_face: ["boy.png", "girl.png", "man.png", "woman.png"]
  - flow_name: "photomaker_1"
    test_cases:
      - name: "default"
        input_params:
          prompt: ["portrait of happy boy", "portrait of crying girl", "portrait of very angry man", "portrait of happy woman"]
        input_files:
          person_face: ["boy.png", "girl.png", "man.png", "woman.png"]
  - flow_name: "photo_stickers"
    test_cases:
      - name: "default"
        input_files:
          person_face: ["boy.png", "girl.png", "man.png", "woman.png"]

UPSCALERS:
  - flow_name: "supir_upscaler"
    test_cases:
      - name: "1024x1024 - 1.5x scaling"
        input_params:
          scale_factor: 1.5
        input_files:
          image_to_upscale: ["boy.png", "girl.png", "man.png", "woman.png"]
      - name: "1024x1024 - 2x scaling"
        input_params:
          scale_factor: 2
        input_files:
          image_to_upscale: ["boy.png", "girl.png", "man.png", "woman.png"]

OTHER:
  - flow_name: "remove_background_birefnet_lite"
    test_cases:
      - name: "Remove Background"
        input_files:
          input_image: ["boy.png", "girl.png", "man.png", "woman.png"]
  - flow_name: "remove_background_birefnet"
    test_cases:
      - name: "Remove Background"
        input_files:
          input_image: ["boy.png", "girl.png", "man.png", "woman.png"]

OLLAMA_1024_TOKENS:
  - flow_name: "ask_ai_internal"
    test_cases:
      - name: "Generate prompt (gemma3:12b-it-qat)"
        support_disable_smart_memory: 0
        use_settings:
          ollama_llm_model: "gemma3:12b-it-qat"
          ollama_keepalive: "0.25"
        input_params:
          text_provider: 0
          num_predict: 1024
          prompt: []
        sleep_after: 30
      - name: "Generate prompt (gemma3:12b-it-qat) (unload=True)"
        support_disable_smart_memory: 0
        use_settings:
          ollama_llm_model: "gemma3:12b-it-qat"
          ollama_keepalive: "0"
        input_params:
          text_provider: 0
          num_predict: 1024
          prompt: []
        sleep_after: 30

OLLAMA_2048_TOKENS:
  - flow_name: "ask_ai_internal"
    test_cases:
      - name: "Generate prompt (gemma3:12b-it-qat)"
        support_disable_smart_memory: 0
        use_settings:
          ollama_llm_model: "gemma3:12b-it-qat"
          ollama_keepalive: "0.25"
        input_params:
          text_provider: 0
          num_predict: 2048
          prompt: []
        sleep_after: 30
      - name: "Generate prompt (gemma3:12b-it-qat) (unload=True)"
        support_disable_smart_memory: 0
        use_settings:
          ollama_llm_model: "gemma3:12b-it-qat"
          ollama_keepalive: "0"
        input_params:
          text_provider: 0
          num_predict: 2048
          prompt: []
        sleep_after: 30
