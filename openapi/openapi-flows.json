{
  "openapi": "3.1.0",
  "info": {
    "title": "visionatrix",
    "version": "2.6.1.dev0"
  },
  "paths": {
    "/vapi/tasks/create/realvis_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Realvis Xl",
        "operationId": "run_realvis_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_realvis_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/playground_2_5_aesthetic": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Playground 2 5 Aesthetic",
        "operationId": "run_playground_2_5_aesthetic",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_playground_2_5_aesthetic"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/remove_background_bria": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Remove Background Bria",
        "operationId": "run_remove_background_bria",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_remove_background_bria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/animagine_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Animagine Xl",
        "operationId": "run_animagine_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_animagine_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/hunyuan_dit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Hunyuan Dit",
        "operationId": "run_hunyuan_dit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_hunyuan_dit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/mobius_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Mobius Xl",
        "operationId": "run_mobius_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_mobius_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sdxl_lighting": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sdxl Lighting",
        "operationId": "run_sdxl_lighting",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sdxl_lighting"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sd3_5_medium": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sd3 5 Medium",
        "operationId": "run_sd3_5_medium",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sd3_5_medium"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/pencil_sketch_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Pencil Sketch Portrait",
        "operationId": "run_pencil_sketch_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_pencil_sketch_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/juggernaut_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Juggernaut Xl",
        "operationId": "run_juggernaut_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_juggernaut_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sd3_5_large_8bit": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sd3 5 Large 8Bit",
        "operationId": "run_sd3_5_large_8bit",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sd3_5_large_8bit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photomaker_flux1_dev": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photomaker Flux1 Dev",
        "operationId": "run_photomaker_flux1_dev",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photomaker_flux1_dev"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/ltxv_txt2video": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Ltxv Txt2Video",
        "operationId": "run_ltxv_txt2video",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_ltxv_txt2video"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/ace_step": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Ace Step",
        "operationId": "run_ace_step",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_ace_step"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/animal_clothing": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Animal Clothing",
        "operationId": "run_animal_clothing",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_animal_clothing"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sketch_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sketch Portrait",
        "operationId": "run_sketch_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sketch_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sketch_pencil": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sketch Pencil",
        "operationId": "run_sketch_pencil",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sketch_pencil"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/mad_scientist": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Mad Scientist",
        "operationId": "run_mad_scientist",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_mad_scientist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/playground_2_5_prometheus": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Playground 2 5 Prometheus",
        "operationId": "run_playground_2_5_prometheus",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_playground_2_5_prometheus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_kontext": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Kontext",
        "operationId": "run_flux1_kontext",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_kontext"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/ask_ai_internal": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Ask Ai Internal",
        "operationId": "run_ask_ai_internal",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_ask_ai_internal"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/vintage_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Vintage Portrait",
        "operationId": "run_vintage_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_vintage_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_schnell_inpaint": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Schnell Inpaint",
        "operationId": "run_flux1_schnell_inpaint",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_schnell_inpaint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/sd3_5_large": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Sd3 5 Large",
        "operationId": "run_sd3_5_large",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_sd3_5_large"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/juggernaut_lite": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Juggernaut Lite",
        "operationId": "run_juggernaut_lite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_juggernaut_lite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/hunyuan_3d": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Hunyuan 3D",
        "operationId": "run_hunyuan_3d",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_hunyuan_3d"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photo_stickers": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photo Stickers",
        "operationId": "run_photo_stickers",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photo_stickers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/human_face_detailer": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Human Face Detailer",
        "operationId": "run_human_face_detailer",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_human_face_detailer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/stable_cascade": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Stable Cascade",
        "operationId": "run_stable_cascade",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_stable_cascade"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/comsmos_predict2_t2i_14b": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Comsmos Predict2 T2I 14B",
        "operationId": "run_comsmos_predict2_t2i_14b",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_comsmos_predict2_t2i_14b"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/memoji_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Memoji Portrait",
        "operationId": "run_memoji_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_memoji_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/to_ghibli": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run To Ghibli",
        "operationId": "run_to_ghibli",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_to_ghibli"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/colorful_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Colorful Xl",
        "operationId": "run_colorful_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_colorful_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/hunyuan_img2video": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Hunyuan Img2Video",
        "operationId": "run_hunyuan_img2video",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_hunyuan_img2video"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_dev_inpaint": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Dev Inpaint",
        "operationId": "run_flux1_dev_inpaint",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_dev_inpaint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/stable_audio_open": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Stable Audio Open",
        "operationId": "run_stable_audio_open",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_stable_audio_open"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_extend": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Extend",
        "operationId": "run_flux1_extend",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_extend"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/ltxv_img2video": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Ltxv Img2Video",
        "operationId": "run_ltxv_img2video",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_ltxv_img2video"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/comicu_portrait": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Comicu Portrait",
        "operationId": "run_comicu_portrait",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_comicu_portrait"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_schnell": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Schnell",
        "operationId": "run_flux1_schnell",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_schnell"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/remove_background_birefnet_lite": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Remove Background Birefnet Lite",
        "operationId": "run_remove_background_birefnet_lite",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_remove_background_birefnet_lite"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/pixart_e": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Pixart E",
        "operationId": "run_pixart_e",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_pixart_e"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/restore_old_photo": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Restore Old Photo",
        "operationId": "run_restore_old_photo",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_restore_old_photo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photo_stickers2": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photo Stickers2",
        "operationId": "run_photo_stickers2",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photo_stickers2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/colorful_xl_inpaint": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Colorful Xl Inpaint",
        "operationId": "run_colorful_xl_inpaint",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_colorful_xl_inpaint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/proteus_xl": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Proteus Xl",
        "operationId": "run_proteus_xl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_proteus_xl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/flux1_dev": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Flux1 Dev",
        "operationId": "run_flux1_dev",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_flux1_dev"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/supir_upscaler": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Supir Upscaler",
        "operationId": "run_supir_upscaler",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_supir_upscaler"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/auraflow": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Auraflow",
        "operationId": "run_auraflow",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_auraflow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/remove_background_birefnet": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Remove Background Birefnet",
        "operationId": "run_remove_background_birefnet",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_remove_background_birefnet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photomaker_2": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photomaker 2",
        "operationId": "run_photomaker_2",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photomaker_2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vapi/tasks/create/photomaker_1": {
      "put": {
        "tags": [
          "integrations"
        ],
        "summary": "Run Photomaker 1",
        "operationId": "run_photomaker_1",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TaskRun_photomaker_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRunResults"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "TaskDetailsOutput": {
        "properties": {
          "comfy_node_id": {
            "type": "integer",
            "title": "Comfy Node Id",
            "description": "ID of the ComfyUI node containing the result."
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of the result from the ComfyUI node - can be either 'image', 'image-mask', 'image-animated', 'video' or 'audio'."
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "Size of file(s) in bytes.",
            "default": -1
          },
          "batch_size": {
            "type": "integer",
            "title": "Batch Size",
            "description": "Count of outputs(files) produced by node.",
            "default": -1
          }
        },
        "type": "object",
        "required": [
          "comfy_node_id",
          "type"
        ],
        "title": "TaskDetailsOutput",
        "description": "Contains information for retrieving the results of a ComfyUI workflow."
      },
      "TaskRunResults": {
        "properties": {
          "tasks_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Tasks Ids",
            "description": "List of IDs representing the tasks that were created."
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/TaskDetailsOutput"
            },
            "type": "array",
            "title": "Outputs",
            "description": "List of outputs for the created tasks."
          }
        },
        "type": "object",
        "required": [
          "tasks_ids",
          "outputs"
        ],
        "title": "TaskRunResults"
      },
      "TaskRun_ace_step": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "lyrics": {
            "type": "string",
            "title": "Lyrics",
            "description": "Lyrics",
            "default": "[Verse 1]\nAcross the skies, across the lands\nOur data rests in trusted hands\nNo distant clouds we can\u2019t define\nWith Nextcloud, the power\u2019s mine\n\n[Chorus]\nNextcloud, our freedom and shield\nIn open code, the truth\u2019s revealed\nSharing dreams with hearts aligned\nA brighter world for humankind"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "background music for parties, radio broadcasts, streaming platforms, female voice"
          },
          "length": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 180.0,
            "minimum": 5.0,
            "title": "Length",
            "description": "Length(in seconds)",
            "default": 45.0
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 500.0,
            "minimum": 40.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          }
        },
        "type": "object",
        "title": "TaskRun_ace_step"
      },
      "TaskRun_animagine_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "1girl, elfen lied, pug, throne, night, masterpiece, high score, great score, absurdres"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "lowres, bad anatomy, bad hands, text, error, missing finger, extra digits, fewer digits, cropped, worst quality, low quality, low score, bad score, average score, signature, watermark, username, blurry"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 40.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 28
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 4.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          }
        },
        "type": "object",
        "title": "TaskRun_animagine_xl"
      },
      "TaskRun_animal_clothing": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Image",
            "description": "Person or animal"
          },
          "image_of_clothes": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image Of Clothes",
            "description": "Image of clothes"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "2:3 (832x1216)"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "person_image",
          "image_of_clothes"
        ],
        "title": "TaskRun_animal_clothing"
      },
      "TaskRun_ask_ai_internal": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "hello my dear friend"
          },
          "system_prompt": {
            "type": "string",
            "title": "System Prompt",
            "description": "System Prompt"
          },
          "image_1": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image 1",
            "description": "Image 1"
          },
          "image_2": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image 2",
            "description": "Image 2"
          },
          "image_3": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image 3",
            "description": "Image 3"
          },
          "use_gemini": {
            "type": "boolean",
            "title": "Use Gemini",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          },
          "temperature": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Temperature",
            "description": "Temperature",
            "default": 0
          },
          "num_predict": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 131072.0,
            "minimum": 1024.0,
            "title": "Num Predict",
            "description": "Number of tokens to generate",
            "default": 4096
          }
        },
        "type": "object",
        "title": "TaskRun_ask_ai_internal"
      },
      "TaskRun_auraflow": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "solo majestic wild cat, ethereal ambiance, symmetrical eyes, detailed background, photorealistic, ultra-realistic, 8k, artistic creativity, dreamlike textures"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 2.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 3.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_auraflow"
      },
      "TaskRun_colorful_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast Run",
            "default": false
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 4.5,
            "minimum": 1.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 1
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 45
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_colorful_xl"
      },
      "TaskRun_colorful_xl_inpaint": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast Run",
            "default": true
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 4.5,
            "minimum": 1.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 1
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 45
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw",
          "prompt"
        ],
        "title": "TaskRun_colorful_xl_inpaint"
      },
      "TaskRun_comicu_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "in_param_396": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "In Param 396",
            "description": "Base gender",
            "default": "girl"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 10.0,
            "minimum": 3.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "in_param_410": {
            "type": "boolean",
            "title": "In Param 410",
            "description": "Simplified Detailing",
            "default": false
          },
          "simplest_lora_strenth": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Simplest Lora Strenth",
            "description": "Simplify Style effect strength",
            "default": 0.5
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_comicu_portrait"
      },
      "TaskRun_comsmos_predict2_t2i_14b": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "A realistic close-up of individual water droplets forming and sliding down the moss-covered edge of a waterfall, each droplet captured mid-fall with crystal clarity, tiny ripples and refractions of light within them, the blurred rushing water in the background creating soft bokeh, rich textures of wet stone and shimmering spray, with natural daylight glinting off the droplets and highlighting every detail."
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "20:11 (1280x704)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 40.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 30
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.0
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "title": "TaskRun_comsmos_predict2_t2i_14b"
      },
      "TaskRun_flux1_dev": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "loras_in_param_39": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Loras In Param 39",
            "description": "Realism LoRa strength",
            "default": 1.0
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 25
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_flux1_dev"
      },
      "TaskRun_flux1_dev_inpaint": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.9
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw"
        ],
        "title": "TaskRun_flux1_dev_inpaint"
      },
      "TaskRun_flux1_extend": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to outpaint"
          },
          "extend_width": {
            "type": "number",
            "multipleOf": 64.0,
            "maximum": 512.0,
            "minimum": 0.0,
            "title": "Extend Width",
            "description": "Extend width",
            "default": 64
          },
          "extend_height": {
            "type": "number",
            "multipleOf": 64.0,
            "maximum": 512.0,
            "minimum": 0.0,
            "title": "Extend Height",
            "description": "Extend height",
            "default": 64
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 35
          },
          "in_param_80": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 99.0,
            "minimum": 1.0,
            "title": "In Param 80",
            "description": "Guidance",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "source_image"
        ],
        "title": "TaskRun_flux1_extend"
      },
      "TaskRun_flux1_kontext": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Image to edit"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "Change the clothes to be a viking warrior while preserving facial features"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 25
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 2
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_flux1_kontext"
      },
      "TaskRun_flux1_schnell": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_flux1_schnell"
      },
      "TaskRun_flux1_schnell_inpaint": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "source_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Source Image",
            "description": "Image to redraw"
          },
          "mask_redraw": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Redraw",
            "description": "Mask to redraw"
          },
          "mask_context": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Mask Context",
            "description": "Context to include"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "denoise": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.1,
            "title": "Denoise",
            "description": "Replacing factor",
            "default": 0.9
          }
        },
        "type": "object",
        "required": [
          "source_image",
          "mask_redraw"
        ],
        "title": "TaskRun_flux1_schnell_inpaint"
      },
      "TaskRun_human_face_detailer": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Image",
            "description": "Image with people"
          }
        },
        "type": "object",
        "required": [
          "person_image"
        ],
        "title": "TaskRun_human_face_detailer"
      },
      "TaskRun_hunyuan_3d": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "front_img": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Front Img",
            "description": "Front"
          },
          "left_img": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Left Img",
            "description": "Left"
          },
          "right_img": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Right Img",
            "description": "Right"
          },
          "back_img": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Back Img",
            "description": "Back"
          }
        },
        "type": "object",
        "required": [
          "front_img"
        ],
        "title": "TaskRun_hunyuan_3d"
      },
      "TaskRun_hunyuan_dit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 15.0,
            "minimum": 2.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 6
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 30
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_hunyuan_dit"
      },
      "TaskRun_hunyuan_img2video": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image",
            "description": "First frame"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "frames_count": {
            "type": "number",
            "multipleOf": 8.0,
            "maximum": 128.0,
            "minimum": 8.0,
            "title": "Frames Count",
            "description": "Number of frames",
            "default": 24
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          }
        },
        "type": "object",
        "required": [
          "image",
          "prompt"
        ],
        "title": "TaskRun_hunyuan_img2video"
      },
      "TaskRun_juggernaut_lite": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "asian, child, penis, embedding:ng_deepnegative_v1_75t, embedding:negative_hand-neg,  (worst quality, low quality:2), lowres, bad anatomy, normal quality, monochrome, grayscale, ((signature, text, watermark))"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "2:3 (832x1216)"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_juggernaut_lite"
      },
      "TaskRun_juggernaut_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "embedding:ng_deepnegative_v1_75t, embedding:negative_hand-neg,  (worst quality, low quality:2), lowres, bad anatomy, normal quality, monochrome, grayscale, ((signature, text, watermark))"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "2:3 (832x1216)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 4.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast run",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_juggernaut_xl"
      },
      "TaskRun_ltxv_img2video": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image",
            "description": "First frame"
          },
          "width": {
            "type": "number",
            "multipleOf": 32.0,
            "maximum": 768.0,
            "minimum": 384.0,
            "title": "Width",
            "description": "Width",
            "default": 512
          },
          "height": {
            "type": "number",
            "multipleOf": 32.0,
            "maximum": 768.0,
            "minimum": 384.0,
            "title": "Height",
            "description": "Height",
            "default": 512
          },
          "frames_count": {
            "type": "number",
            "multipleOf": 8.0,
            "maximum": 256.0,
            "minimum": 8.0,
            "title": "Frames Count",
            "description": "Number of frames",
            "default": 40
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "image"
        ],
        "title": "TaskRun_ltxv_img2video"
      },
      "TaskRun_ltxv_txt2video": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "A woman with long brown hair and light skin smiles at another woman with long blonde hair. The woman with brown hair wears a black jacket and has a small, barely noticeable mole on her right cheek. The camera angle is a close-up, focused on the woman with brown hair's face. The lighting is warm and natural, likely from the setting sun, casting a soft glow on the scene. The scene appears to be real-life footage."
          },
          "width": {
            "type": "number",
            "multipleOf": 32.0,
            "maximum": 768.0,
            "minimum": 384.0,
            "title": "Width",
            "description": "Width",
            "default": 768
          },
          "height": {
            "type": "number",
            "multipleOf": 32.0,
            "maximum": 768.0,
            "minimum": 384.0,
            "title": "Height",
            "description": "Height",
            "default": 512
          },
          "frames_count": {
            "type": "number",
            "multipleOf": 8.0,
            "maximum": 256.0,
            "minimum": 8.0,
            "title": "Frames Count",
            "description": "Number of frames",
            "default": 48
          }
        },
        "type": "object",
        "title": "TaskRun_ltxv_txt2video"
      },
      "TaskRun_mad_scientist": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Image",
            "description": "Person's face"
          },
          "style_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Style Image",
            "description": "Style"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "person_image",
          "style_image"
        ],
        "title": "TaskRun_mad_scientist"
      },
      "TaskRun_memoji_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "girl, portrait, close up"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_memoji_portrait"
      },
      "TaskRun_mobius_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast run",
            "default": false
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 3.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 5
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_mobius_xl"
      },
      "TaskRun_pencil_sketch_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini instead of Ollama",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_pencil_sketch_portrait"
      },
      "TaskRun_photo_stickers": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "gender": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "Gender",
            "description": "Base gender",
            "default": "boy"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photo_stickers"
      },
      "TaskRun_photo_stickers2": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt1": {
            "type": "string",
            "title": "Prompt1",
            "description": "Fisrt Sticker Prompt",
            "default": "Boxers, with red boxing gloves, swinging their fists"
          },
          "prompt2": {
            "type": "string",
            "title": "Prompt2",
            "description": "Second Sticker Prompt",
            "default": "Dressed in a Superman costume"
          },
          "prompt3": {
            "type": "string",
            "title": "Prompt3",
            "description": "Third Sticker Prompt",
            "default": "Dress up as Santa Claus with a rattle in your hand"
          },
          "prompt4": {
            "type": "string",
            "title": "Prompt4",
            "description": "Fourth Sticker Prompt",
            "default": "Holding a bouquet of roses in his hand and wearing a gown"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini for vision instead of Ollama",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photo_stickers2"
      },
      "TaskRun_photomaker_1": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait of girl"
          },
          "style": {
            "type": "string",
            "enum": [
              "Cinematic",
              "Disney Character",
              "Digital Art",
              "Photographic",
              "Fantasy art",
              "Neonpunk",
              "Comic book",
              "Lowpoly",
              "Line art"
            ],
            "title": "Style",
            "description": "Photo Style",
            "default": "Cinematic"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "accuracy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 0.5,
            "minimum": 0.1,
            "title": "Accuracy",
            "description": "Freedom of outcome",
            "default": 0.3
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photomaker_1"
      },
      "TaskRun_photomaker_2": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face1": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face1",
            "description": "Person's face"
          },
          "person_face2": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face2",
            "description": "Person's face"
          },
          "person_face3": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face3",
            "description": "Person's face"
          },
          "person_face4": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face4",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait of a girl"
          },
          "in_param_235": {
            "type": "string",
            "enum": [
              "(No style)",
              "Cinematic",
              "Disney Charactor",
              "Digital Art",
              "Photographic (Default)",
              "Fantasy art",
              "Neonpunk",
              "Enhance",
              "Line art"
            ],
            "title": "In Param 235",
            "description": "PhotoMaker Style",
            "default": "Photographic (Default)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "asymmetry, worst quality, low quality, illustration, 3d, 2d, painting, cartoons, sketch, open mouth"
          },
          "accuracy": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 0.5,
            "minimum": 0.1,
            "title": "Accuracy",
            "description": "Freedom of outcome",
            "default": 0.2
          }
        },
        "type": "object",
        "required": [
          "person_face1",
          "person_face2"
        ],
        "title": "TaskRun_photomaker_2"
      },
      "TaskRun_photomaker_flux1_dev": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "Fantasy portrait of a mystical character with captivating eyes, soft lighting, detailed facial features, ethereal atmosphere, subtle background"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "aesthetic_version": {
            "type": "boolean",
            "title": "Aesthetic Version",
            "description": "Aesthetic version",
            "default": false
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 25
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_photomaker_flux1_dev"
      },
      "TaskRun_pixart_e": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "drawing of a tank with a (blue:0.8) camo pattern"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "default"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 3.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_pixart_e"
      },
      "TaskRun_playground_2_5_aesthetic": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:2 (1216x832)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 30.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 50
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 5.0,
            "minimum": 3.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 3
          },
          "fast_run": {
            "type": "boolean",
            "title": "Fast Run",
            "description": "Fast run",
            "default": false
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_playground_2_5_aesthetic"
      },
      "TaskRun_playground_2_5_prometheus": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 40
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 8.0,
            "minimum": 6.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_playground_2_5_prometheus"
      },
      "TaskRun_proteus_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 40
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 8.0,
            "minimum": 6.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_proteus_xl"
      },
      "TaskRun_realvis_xl": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait, masterpiece, 4k, ray tracing, intricate details, highly detailed, hyper realistic, 8k RAW editorial photo. an adorable lynx , head with a tilt and a slight blink. The lynx is feathers should be soft and fluffy, the background should be a snowy forest, dramatic light, shallow depth of field, high budget"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "bad hands, bad anatomy, ugly, deformed, (face asymmetry, eyes asymmetry, deformed eyes, deformed mouth, open mouth)"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "1:1 (1024x1024)"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 30
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 7.0,
            "minimum": 2.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 3
          }
        },
        "type": "object",
        "title": "TaskRun_realvis_xl"
      },
      "TaskRun_remove_background_birefnet": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Input image"
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_remove_background_birefnet"
      },
      "TaskRun_remove_background_birefnet_lite": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Input image"
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_remove_background_birefnet_lite"
      },
      "TaskRun_remove_background_bria": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "input_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Input Image",
            "description": "Input image"
          }
        },
        "type": "object",
        "required": [
          "input_image"
        ],
        "title": "TaskRun_remove_background_bria"
      },
      "TaskRun_restore_old_photo": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "src_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Src Image",
            "description": "Old photo"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini instead of Ollama",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "src_image"
        ],
        "title": "TaskRun_restore_old_photo"
      },
      "TaskRun_sd3_5_large": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a close-up half-portrait photo of a woman wearing a sleek blue and white summer dress with a monstera plant motif,  red braided hair, she is on Brighton pebble beach UK, west pier behind her, early in the morning, seagulls flying overhead, focus on face"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 6.0,
            "minimum": 2.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_sd3_5_large"
      },
      "TaskRun_sd3_5_large_8bit": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a close-up half-portrait photo of a woman wearing a sleek blue and white summer dress with a monstera plant motif,  red braided hair, she is on Brighton pebble beach UK, west pier behind her, early in the morning, seagulls flying overhead, focus on face"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 6.0,
            "minimum": 2.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_sd3_5_large_8bit"
      },
      "TaskRun_sd3_5_medium": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a close-up half-portrait photo of a woman wearing a sleek blue and white summer dress with a monstera plant motif,  red braided hair, she is on Brighton pebble beach UK, west pier behind her, early in the morning, seagulls flying overhead, focus on face"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 6.0,
            "minimum": 2.5,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 4.5
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "ugly"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 60.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 20
          }
        },
        "type": "object",
        "title": "TaskRun_sd3_5_medium"
      },
      "TaskRun_sdxl_lighting": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "steps_number": {
            "type": "string",
            "enum": [
              "4 steps",
              "8 steps"
            ],
            "title": "Steps Number",
            "description": "Number of steps",
            "default": "8 steps"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt",
            "default": "ugly"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_sdxl_lighting"
      },
      "TaskRun_sketch_pencil": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "a monochromatic pencil sketch of a ragdoll cat, blue eyes, impressionism, negative space"
          },
          "aspect_ratio": {
            "type": "string",
            "enum": [
              "1:1 (1024x1024)",
              "2:3 (832x1216)",
              "3:4 (896x1152)",
              "5:8 (768x1216)",
              "9:16 (768x1344)",
              "9:19 (704x1472)",
              "9:21 (640x1536)",
              "3:2 (1216x832)",
              "4:3 (1152x896)",
              "8:5 (1216x768)",
              "16:9 (1344x768)",
              "20:11 (1280x704)",
              "19:9 (1472x704)",
              "21:9 (1536x640)"
            ],
            "title": "Aspect Ratio",
            "description": "Aspect Ratio",
            "default": "3:4 (896x1152)"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "pencil_lora_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Pencil Lora Strength",
            "description": "Pencil LoRa strength",
            "default": 1
          }
        },
        "type": "object",
        "title": "TaskRun_sketch_pencil"
      },
      "TaskRun_sketch_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "in_param_397": {
            "type": "string",
            "enum": [
              "girl",
              "boy",
              "man",
              "woman"
            ],
            "title": "In Param 397",
            "description": "Base gender",
            "default": "girl"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 10.0,
            "minimum": 3.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_sketch_portrait"
      },
      "TaskRun_stable_audio_open": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "116 BPM rock drums loop clean production"
          },
          "length": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 47.0,
            "minimum": 3.0,
            "title": "Length",
            "description": "Length(in seconds)",
            "default": 22
          },
          "prompt_strength": {
            "type": "number",
            "multipleOf": 0.1,
            "maximum": 8.0,
            "minimum": 5.0,
            "title": "Prompt Strength",
            "description": "Prompt strength",
            "default": 7
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 120.0,
            "minimum": 20.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 100
          }
        },
        "type": "object",
        "title": "TaskRun_stable_audio_open"
      },
      "TaskRun_stable_cascade": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt"
          },
          "pass_count": {
            "type": "string",
            "enum": [
              "One pass",
              "Two pass",
              "Three pass"
            ],
            "title": "Pass Count",
            "description": "Pass count",
            "default": "Two pass"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt",
            "description": "Negative Prompt"
          },
          "batch_size": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 10.0,
            "minimum": 1.0,
            "title": "Batch Size",
            "description": "Batch size",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "TaskRun_stable_cascade"
      },
      "TaskRun_supir_upscaler": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "image_to_upscale": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Image To Upscale",
            "description": "Image to upscale"
          },
          "scale_factor": {
            "type": "string",
            "title": "Scale Factor",
            "description": "Output image size factor",
            "default": 2
          },
          "steps_count": {
            "type": "number",
            "multipleOf": 1.0,
            "maximum": 50.0,
            "minimum": 25.0,
            "title": "Steps Count",
            "description": "Steps number to generate",
            "default": 45
          },
          "supir_control_scale": {
            "type": "number",
            "multipleOf": 0.01,
            "maximum": 1.0,
            "minimum": 0.9,
            "title": "Supir Control Scale",
            "description": "Strictness (High = Less Freedom)",
            "default": 1
          },
          "in_param_117": {
            "type": "string",
            "enum": [
              "fp16",
              "bf16",
              "fp32",
              "auto"
            ],
            "title": "In Param 117",
            "description": "Diffusion Type(set to \"fp32\" on macOS)",
            "default": "auto"
          },
          "in_param_125": {
            "type": "string",
            "enum": [
              "Soft",
              "Sharp",
              "Soft, disabled tiling(for small images)",
              "Sharp, disabled tiling(for small images)"
            ],
            "title": "In Param 125",
            "description": "Scaling option",
            "default": "Soft"
          },
          "in_param_138": {
            "type": "boolean",
            "title": "In Param 138",
            "description": "Low memory mode",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "image_to_upscale"
        ],
        "title": "TaskRun_supir_upscaler"
      },
      "TaskRun_to_ghibli": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "src_image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Src Image",
            "description": "Image to Ghiblify"
          },
          "diffusion_precision": {
            "type": "string",
            "enum": [
              "default",
              "fp8_e4m3fn",
              "fp8_e4m3fn_fast",
              "fp8_e5m2"
            ],
            "title": "Diffusion Precision",
            "description": "Diffusion precision",
            "default": "fp8_e4m3fn"
          },
          "vision_provider": {
            "type": "boolean",
            "title": "Vision Provider",
            "description": "Use Gemini instead of Ollama",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "src_image"
        ],
        "title": "TaskRun_to_ghibli"
      },
      "TaskRun_vintage_portrait": {
        "properties": {
          "group_scope": {
            "type": "integer",
            "maximum": 255.0,
            "minimum": 1.0,
            "title": "Group Scope",
            "description": "Group number to which task should be assigned.",
            "default": 1
          },
          "priority": {
            "type": "integer",
            "maximum": 15.0,
            "minimum": 0.0,
            "title": "Priority",
            "description": "Execution priority. Higher numbers indicate higher priority.",
            "default": 0
          },
          "child_task": {
            "type": "integer",
            "title": "Child Task",
            "description": "Int boolean indicating whether to create a relation between tasks",
            "default": 0
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "Optional. URL to call when task state changes. Leave empty if not needed or if using `/progress` or `/progress-summary` endpoints.",
            "default": ""
          },
          "webhook_headers": {
            "type": "string",
            "title": "Webhook Headers",
            "description": "Optional. Headers for webhook URL as an encoded JSON string. Used only when `webhook_url` is set.",
            "default": ""
          },
          "seed": {
            "type": "integer",
            "title": "Seed",
            "description": "The `seed` parameter for reproducing the results of workflows.",
            "default": 1
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "description": "Number of tasks to be created.",
            "default": 1
          },
          "translate": {
            "type": "integer",
            "title": "Translate",
            "description": "Should the prompt be translated if auto-translation option is enabled.",
            "default": 0
          },
          "person_face": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Face",
            "description": "Person's face"
          },
          "person_pose": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "string"
              }
            ],
            "contentMediaType": "image/*",
            "title": "Person Pose",
            "description": "Person's face pose"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Prompt",
            "default": "portrait of a girl, cinematic,  masterpiece"
          }
        },
        "type": "object",
        "required": [
          "person_face"
        ],
        "title": "TaskRun_vintage_portrait"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8288",
      "description": "Default server running Visionatrix"
    }
  ]
}
